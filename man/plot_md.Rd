% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_functions.R
\name{plot_md}
\alias{plot_md}
\title{MD Plot Function}
\usage{
plot_md(df, x, y, sig_col, fdr = 0.05, lfc = 0)
}
\arguments{
\item{df}{dataframe containing log-fold-change, p-value, and logCPM columns.}

\item{x}{column in dataframe containing the logCPM data}

\item{y}{column in dataframe containing the log-fold-change values}

\item{sig_col}{column in dataframe containing the results from significance testing.}

\item{fdr}{numeric. Significance level cutoff for plotting. Values below the given fdr threshold are considered significant. Default (0.05)}

\item{lfc}{numeric. Log-fold-change cutoff for plotting. Values greater than the abs(lfc) and less than fdr are displayed as differentially expressed. Default(0)}
}
\value{
ggplot MD plot
}
\description{
Create an MD plot from the given dataframe
}
\examples{
\dontrun{
library(edgeR)
library(coriell)

# create some fake data
x <- data.frame(ctl1 = rnbinom(1000, size = 0.4, prob = 1e-5),
                ctl2 = rnbinom(1000, size = 0.4, prob = 1e-5),
                trt1 = rnbinom(1000, size = 0.4, prob = 1e-5),
                trt2 = rnbinom(1000, size = 0.4, prob = 1e-5),
                row.names = paste0('gene', 1:1000))

# run edger pipeline
group <- factor(c(1,1,2,2))
y <- DGEList(counts=x,group=group)
y <- calcNormFactors(y)
design <- model.matrix(~group)
y <- estimateDisp(y,design)

# To perform quasi-likelihood F-tests:
fit <- glmQLFit(y,design)
qlf <- glmQLFTest(fit,coef=2)

# convert the results object to a dataframe
res_df <- edger_to_df(qlf)

# Create md plot
plot_md(res_df, x = logCPM, y = logFC, sig_col = FDR)
}
}
