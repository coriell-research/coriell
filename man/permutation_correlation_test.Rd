% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/permutation_testing.R
\name{permutation_correlation_test}
\alias{permutation_correlation_test}
\title{Parallel Implementation of a Correlation Permutation Test}
\usage{
permutation_correlation_test(
  df,
  y,
  n_cores = 1,
  n_perm = 1000,
  cor_method = "spearman",
  p_adjust_method = "fdr"
)
}
\arguments{
\item{df}{data.frame. Site by Samples data.frame}

\item{y}{numeric vector. Numeric vector of values used to correlate with each row of df}

\item{n_cores}{numeric. Number of cores to use for parallel processing.  Default 1.}

\item{n_perm}{numeric. Number of permutations to perform on each row. Default 1000.}

\item{cor_method}{a character string indicating which correlation coefficient (or covariance) is to be computed.
One of "pearson", "kendall", or "spearman" (default): can be abbreviated.}

\item{p_adjust_method}{a character string indicating which of the p.adjust.methods to use for correction. Default "fdr".}
}
\value{
df with additional columns for correlations, empirical p-values, and fdr adjusted p-values.
}
\description{
Performs a correlation permutation test over all rows of a data.frame using multiple cores
}
\examples{
\dontrun{
library(methylKit)

ages <- data.frame(age = c(30, 80, 34, 30, 80, 40))

sim_meth <- dataSim(
  replicates = 6,
  sites = 1000,
  treatment = c(rep(1, 3), rep(0, 3)),
  covariates = ages,
  sample.ids = c(paste0("test", 1:3), paste0("ctrl", 1:3))
)

# extract the methylation as percentages and coerce to data.frame
perc_meth <- as.data.frame(percMethylation(sim_meth))

# perform permutation testing using 4 cores and 1000 permutations
# return a dataframe (res) with the new columns
res <- permutation_correlation_test(perc_meth, y = ages$age, n_cores = 4, n_perm = 1000)
}
}
